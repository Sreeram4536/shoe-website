<%- include("../partials/admin/header") %>
<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css" />
  <style>
    .content-main {
      padding: 20px;
      background-color: #f9f9f9;
    }

    .card-header {
      background-color: #007bff;
      color: white;
      border-radius: 10px;
      padding: 15px;
    }

    .form-label {
      font-weight: bold;
    }

    .form-control {
      border-radius: 10px;
      padding: 10px;
      margin-bottom: 15px;
    }

    .btn-primary {
      width: 100%;
      padding: 10px;
      border-radius: 10px;
      background-color: #007bff;
      border: none;
      transition: background-color 0.3s;
    }

    .btn-primary:hover {
      background-color: #0056b3;
    }

    .pagination-container {
      text-align: center;
      margin-top: 20px;
    }

    .pagination a,
    .pagination .current-page {
      padding: 8px 12px;
      margin: 2px;
      border-radius: 5px;
      border: 1px solid #ddd;
      color: #333;
    }

    .error-message {
      color: red;
      font-size: 0.9em;
    }
  </style>
</head>
<body>
  <section class="content-main">
    <div class="content-header">
      <h2 class="content-title card-title text-center">Category Management</h2>
    </div>

    <header class="card-header text-center mb-3">
      <form action="/admin/category/" method="get" class="d-inline">
        <div class="input-group input-group-sm rounded-pill" style="width: 500px;">
          <input type="text" class="form-control border-0 rounded-pill" placeholder="Search categories" name="search" value="<%= search %>"  />
          <button class="btn btn-outline-secondary" type="submit">Search</button>
          <button type="button" class="btn btn-warning ms-5" onclick="clearSearch()">Clear</button>
        </div>
      </form>
    </header>

    <div class="card">
      <div class="card-body">
        <div class="row">
          <div class="col-md-4 mb-4">
            <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
              <div class="mb-3">
                <label for="product_name" class="form-label">Category Name</label>
                <input type="text" name="name" placeholder="Enter category name" class="form-control" id="product_name" />
                <div id="name-error" class="error-message"></div>
              </div>
              <div class="mb-3">
                <label for="descriptionId" class="form-label">Description</label>
                <textarea name="description" placeholder="Enter description" class="form-control" id="descriptionId"></textarea>
                <div id="description-error" class="error-message"></div>
              </div>
              <button type="submit" class="btn btn-primary">Create Category</button>
            </form>
          </div>

          <div class="col-md-8">
            <div class="table-responsive">
              <table class="table table-hover">
                <thead class="table-light">
                  <tr>
                    <th class="text-center">#</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Offer Price</th>
                    <th>Offer</th>
                    <th>Status</th>
                    <th>List/Unlist</th>
                    <th>Edit</th>
                  </tr>
                </thead>
                <tbody>
                  <% cat.reverse().forEach((category, index) => { %>
                    <tr>
                      <td class="text-center"><%= index + 1 %></td>
                      <td><%= category.name %></td>
                      <td><%= category.description %></td>
                      <td>
                        <% if(category.categoryOffer){ %>

                            <%=category.categoryOffer%>%

                            <% }else{ %>
                                0%
                                <% } %>
                      </td>
                      <td>
                        <% if(category.categoryOffer===0){ %>

                        <button class="btn btn-info btn-sm" onclick="addOffer('<%=category._id%>')">Add Offer</button>
                        <% }else{ %>
                        <button class="btn btn-danger btn-sm" onclick="removeOffer('<%=category._id%>')">Remove</button>
                        <% } %>
                      </td>
                     
                      <td class="text-start">
                        <% if(category.isListed){ %>
                        <span class="badge rounded-pill alert-success" style="width: 60px">Listed</span>
                        <% }else{ %>
                        <span class="badge rounded-pill alert-danger" style="width: 60px">Unlisted</span>
                        <% } %>
                      </td>
                      <td>
                        <% if(category.isListed){ %>
                        <button class="btn btn-danger btn-sm"><a href="/admin/listCategory?id=<%= category._id %>">Unlist</a></button>
                        <% }else{ %>
                        <button class="btn btn-success btn-sm"><a href="/admin/unlistCategory?id=<%= category._id %>">List</a></button>
                        <% } %>
                      </td>
                      <td>
                        <button class="btn btn-info btn-sm"><a href="/admin/editCategory?id=<%=category._id%>">Edit</a></button>
                      </td>
                    </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="pagination-container">
      <% if (currentPage > 1) { %>
        <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
      <% } %>
      <% for (let i = 1; i <= totalPages; i++) { %>
        <% if (i === currentPage) { %>
          <span class="current-page"><%= i %></span>
        <% } else { %>
          <a href="?page=<%= i %>"><%= i %></a>
        <% } %>
      <% } %>
      <% if (currentPage < totalPages) { %>
        <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
      <% } %>
    </div>
  </section>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script>
    function handleFormSubmit(event) {
      event.preventDefault();
      if (!validateForm()) return;

      const name = document.getElementsByName("name")[0].value;
      const description = document.getElementById("descriptionId").value;

      fetch('/admin/addCategory', {
        method: "POST",
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ name, description })
      })
      .then(response => {
        if (!response.ok) {
          return response.json().then(err => { throw new Error(err.error); });
        }
        return response.json();
      })
      .then(data => location.reload())
      .catch(error => {
        Swal.fire({
          icon: "error",
          title: "Oops",
          text: error.message === "Category already exists" ? "Category already exists" : "An error occurred"
        });
      });
    }

    function validateForm() {
      clearErrorMessages();
      let isValid = true;

      const name = document.getElementsByName("name")[0].value.trim();
      const description = document.getElementById("descriptionId").value.trim();

      if (!name) {
        displayErrorMessage("name-error", "Please enter a name");
        isValid = false;
      } else if (!/^[a-zA-Z\s]+$/i.test(name)) {
        displayErrorMessage("name-error", "Category name should only contain letters");
        isValid = false;
      }

      if (!description) {
        displayErrorMessage("description-error", "Please enter a description");
        isValid = false;
      }

      return isValid;
    }

    function displayErrorMessage(elementId, message) {
      const errorElement = document.getElementById(elementId);
      errorElement.innerText = message;
      errorElement.style.display = "block";
    }

    function clearErrorMessages() {
      document.querySelectorAll(".error-message").forEach(el => {
        el.innerText = "";
        el.style.display = "none";
      });
    }

    async function addOffer(categoryId) {
        const{value:amount}= await Swal.fire({
            title:"Offer in percentage",
            input:"number",
            inputLabel:"Percentage",
            inputPlaceholder:"%"
        });

        if(amount){

            try {

                const response= await fetch('/admin/addCategoryOffer',{
                    method:"POST",
                    headers:{
                        'Content-Type':"application/json",
                    },
                    body:JSON.stringify({
                        percentage:amount,
                        categoryId:categoryId

                     })
                });

                const data = await response.json();
                if(response.ok && data.status===true){
                    Swal.fire(
                        "Offer added",
                        "The offer has been added",
                        "success"
                    ).then(()=>{
                        location.reload();
                    })
                }else{
                    Swal.fire("Failed",data.message || "Adding offer failed","error")
                }
                
            } catch (error) {

                Swal.fire(
                    "Error",
                    "AN error occured while adding the offer",
                    "error"
                );
                console.log("Error adding offer",error)
                
            }
        }
    }

    async function removeOffer(categoryId) {

        try {
            const response = await fetch("/admin/removeCategoryOffer",{
                method:"POST",
                headers:{
                    'Content-Type':"application/json"
                },
                body:JSON.stringify({
                    categoryId:categoryId,
                })
            })
            const data = await response.json();

            if(response.ok && data.status ===true){
                Swal.fire(
                    "Offer removed",
                    "The offer has been removed",
                    "success"
                ).then(()=>{
                    location.reload();
                })
            }else{
                Swal.fire("Failed",data.message ||"Removing offer failed","error")
            }

        } catch (error) {
            Swal.fire(
                "Error",
                "An error occured while removing the offer",
                "error"
            );
            console.error("Error in removing offer","error")
            
        }
        
    }

    
            function clearSearch(){
                window.location.href = '/admin/category';
            }
       

  </script>
<%- include("../partials/admin/footer") %>
