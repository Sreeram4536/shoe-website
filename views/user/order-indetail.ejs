<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Details</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .main {
            padding: 30px 0;
        }

        .panel {
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
            background-color: white;
        }

        .panel-heading {
            background-color: #487379;
            color: white;
            border-radius: 10px 10px 0 0;
            padding: 15px;
        }

        .panel-body {
            padding: 20px;
        }

        .order-status {
            padding: 5px 15px;
            border-radius: 15px;
            font-size: 14px;
            font-weight: bold;
        }

        .status-pending { background: #fff3cd; color: #856404; }
        .status-processing { background: #cce5ff; color: #004085; }
        .status-shipped { background: #d4edda; color: #155724; }
        .status-delivered { background: #d4edda; color: #155724; }
        .status-cancelled { background: #f8d7da; color: #721c24; }

        .order-product {
            display: flex;
            align-items: center;
            padding: 15px;
            border-bottom: 1px solid #eee;
            margin-bottom: 10px;
        }

        .order-product img {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 8px;
            margin-right: 20px;
        }

        .product-details {
            flex-grow: 1;
        }

        .breadcrumb-wrap {
            background-color: #eee2e9;
            padding: 15px 0;
            margin-bottom: 30px;
        }

        .breadcrumb {
            display: flex;
            align-items: center;
            margin: 0;
            padding: 0;
            list-style: none;
        }

        .breadcrumb a {
            color: #487379;
            text-decoration: none;
        }

        .breadcrumb span {
            margin: 0 10px;
            color: #6c757d;
        }

        .swal2-popup {
            border-radius: 15px;
        }
        
        .swal2-title {
            color: #487379;
        }
        
        .swal2-confirm {
            background-color: #487379 !important;
        }
        
        .swal2-cancel {
            background-color: #dc3545 !important;
        }

        .btn-warning {
            background-color: #ffc107;
            border-color: #ffc107;
            color: #000;
        }

        .btn-warning:hover {
            background-color: #ffb300;
            border-color: #ffb300;
        }

        .me-2 {
            margin-right: 0.5rem;
        }
    </style>
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
</head>
<body>
    <main class="main">
        <!-- Breadcrumb -->
        <div class="breadcrumb-wrap">
            <div class="container">
                <div class="breadcrumb">
                    <a href="/">Home</a>
                    <span>/</span>
                    <a href="/user/orders">Orders</a>
                    <span>/</span>
                    Order Details
                </div>
            </div>
        </div>

        <div class="container">
            <% if (order) { %>
                <div class="panel">
                    <div class="panel-heading d-flex justify-content-between align-items-center">
                        <h5 class="panel-title mb-0">Order #<%= order.orderId %></h5>
                        <span class="order-status status-<%= order.status.toLowerCase() %>">
                            <%= order.status %>
                        </span>
                    </div>
                    <div class="panel-body">
                        <!-- Order Date and Status -->
                        <div class="mb-4">
                            <p class="mb-1">
                                <strong>Order Date:</strong> 
                                <%= new Date(order.createdOn).toLocaleString() %>
                            </p>
                        </div>

                        <!-- Ordered Items -->
                            <div class="mb-4">
                                <h6 class="mb-3">Ordered Items</h6>
                                <% order.orderedItems.forEach(item => { %>
                                    <div class="order-product">
                                        <img src="/uploads/product-images/<%= item.product.productImage[0] %>" 
                                            alt="<%= item.product.productName %>">
                                        <div class="product-details">
                                            <h6 class="mb-2"><%= item.product.productName %></h6>
                                            <p class="mb-1">Quantity: <%= item.quantity %></p>
                                            <p class="mb-1">Price: ₹<%= item.price.toFixed(2) %></p>
                                            <p class="mb-0">Subtotal: ₹<%= (item.quantity * item.price).toFixed(2) %></p>
                                        </div>
                                    </div>
                                <% }); %>
                            </div>

                    <!-- Delivery Address -->
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <h6 class="mb-3">Delivery Address</h6>
                            <% if (order.deliveryAddress) { %>
                                <p class="mb-1"><%= order.deliveryAddress.name %></p>
                                <p class="mb-1"><%= order.deliveryAddress.city %></p>
                                <p class="mb-1"><%= order.deliveryAddress.landMark %></p>
                                <p class="mb-1"><%= order.deliveryAddress.state %></p>
                                <p class="mb-1">PIN: <%= order.deliveryAddress.pincode %></p>
                                <p class="mb-1">Phone: <%= order.deliveryAddress.phone %></p>
                            <% } else { %>
                                <p>Address details not available</p>
                            <% } %>
                        </div>

                            
                            <!-- Order Summary -->
                            <div class="col-md-6">
                                <h6 class="mb-3">Order Summary</h6>
                                <div class="bg-light p-3 rounded">
                                    <p class="d-flex justify-content-between mb-2">
                                        <span>Subtotal:</span>
                                        <span>₹<%= order.totalPrice.toFixed(2) %></span>
                                    </p>
                                    <p class="d-flex justify-content-between mb-2">
                                        <span>Discount:</span>
                                        <span>₹<%= order.discount.toFixed(2) %></span>
                                    </p>
                                    <hr>
                                    <p class="d-flex justify-content-between mb-0 fw-bold">
                                        <span>Total:</span>
                                        <span>₹<%= order.finalAmount.toFixed(2) %></span>
                                    </p>
                                </div>
                            </div>
                        </div>

                        <!-- Action Buttons -->
                        <div class="text-center">
                            <% if (order.status === 'Pending') { %>
                                <button onclick="confirmCancel('<%= order._id %>')" 
                                        class="btn btn-danger me-2">
                                    Cancel Order
                                </button>
                            <% } %>
                            <% if (order.status === 'Delivered') { %>
                                <button onclick="confirmReturn('<%= order._id %>','<%=order.finalAmount %>')" 
                                        class="btn btn-warning me-2">
                                    Return Order
                                </button>
                            <% } %>
                            <button onclick="goBack()" class="btn btn-secondary">Back to Orders</button>
                        </div>
                    </div>
                </div>
            <% } else { %>
                <div class="panel">
                    <div class="panel-body text-center">
                        <p>Order details not found</p>
                        <a href="/user/orders" class="btn btn-secondary">Back to Orders</a>
                    </div>
                </div>
            <% } %>
        </div>
    </main>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
         document.addEventListener('DOMContentLoaded', function() {
             const errorMessage = '<%= errorMessage %>';
             if (errorMessage && errorMessage !== 'null') {
                 Swal.fire({
                     icon: 'error',
                     title: 'Oops...',
                     text: errorMessage,
                     timer: null,
                     showConfirmButton: true
                 });
             }
         });
    
        // Function to confirm order cancellation
        function confirmCancel(orderId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, cancel it!',
                cancelButtonText: 'No, keep it',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    showLoading();
                    
                    fetch(`/user/order/${orderId}/cancel`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success!',
                                text: data.message || 'Order cancelled successfully',
                                showConfirmButton: true
                            }).then(() => {
                                window.location.href = '/user/orders';
                            });
                        } else {
                            throw new Error(data.message || 'Failed to cancel order');
                        }
                    })
                    .catch(error => {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: error.message || 'Something went wrong!',
                            showConfirmButton: true
                        });
                    });
                }
            });
        }
    
        // Function to handle back button
        function goBack() {
            Swal.fire({
                title: 'Leaving Order Details',
                text: 'Are you sure you want to go back to the orders list?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Yes, go back',
                cancelButtonText: 'Stay here'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '/user/orders';
                }
            });
        }
    
        // Function to show loading state
        function showLoading(message = 'Processing...') {
            Swal.fire({
                title: message,
                text: 'Please wait while we process your request.',
                allowOutsideClick: false,
                allowEscapeKey: false,
                showConfirmButton: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });
        }
    
        // Function to handle network errors
        function handleNetworkError() {
            Swal.fire({
                icon: 'error',
                title: 'Network Error',
                text: 'Please check your internet connection and try again.',
                showConfirmButton: true
            });
        }
    
        // Add this function for return confirmation
        function confirmReturn(orderId, amount) {
            console.log('Starting return process:', { orderId, amount });
            Swal.fire({
                title: 'Return Order',
                text: `Amount ₹${amount} will be added to your wallet after return confirmation`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, return it!',
                cancelButtonText: 'No, keep it',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    showLoading('Processing return request...');
                    
                    const returnAmount = parseFloat(amount);
                    if (isNaN(returnAmount)) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Invalid amount',
                            timer: null,
                            showConfirmButton: true
                        });
                        return;
                    }

                    fetch(`/user/order/${orderId}/return`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ amount: returnAmount })
                    })
                    .then(response => {
                        if (!response.ok) {
                            return response.json().then(data => {
                                throw new Error(data.message || 'Network response was not ok');
                            });
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Return Initiated!',
                                text: data.message || 'Amount has been added to your wallet',
                                timer: null,
                                showConfirmButton: true
                            }).then(() => {
                                window.location.href = '/user/orders';
                            });
                        } else {
                            throw new Error(data.message || 'Failed to process return');
                        }
                    })
                    .catch(error => {
                        console.error('Client-side error:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: error.message || 'Something went wrong!',
                            timer: null,
                            showConfirmButton: true
                        });
                    });
                }
            });
        }
    </script>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>

    
</body>
</html>