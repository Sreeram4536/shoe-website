<%- include("../partials/user/header") %>

<div class="payment-container">
    <div class="payment-wrapper">
        <div class="payment-card">
            <div class="payment-header">
                <div class="header-icon">
                    <i class="fas fa-shopping-bag"></i>
                </div>
                <h2>Complete Your Order</h2>
                <p class="text-muted">Please review and confirm your order details</p>
            </div>

            <div class="order-progress">
                <div class="progress-step active">
                    <i class="fas fa-map-marker-alt"></i>
                    <span>Address</span>
                </div>
                <div class="progress-line active"></div>
                <div class="progress-step active">
                    <i class="fas fa-credit-card"></i>
                    <span>Payment</span>
                </div>
                <div class="progress-line"></div>
                <div class="progress-step">
                    <i class="fas fa-check-circle"></i>
                    <span>Confirm</span>
                </div>
            </div>

            <div class="payment-content">
                <!-- Delivery Address Section -->
                <div class="section address-section">
                    <div class="section-title">
                        <i class="fas fa-home"></i>
                        <h3>Delivery Address</h3>
                    </div>
                    <div class="address-card">
                        <div class="user-name"><%= selectedAddress.name %></div>
                        <div class="address-details">
                            <p><%= selectedAddress.city %>, <%= selectedAddress.state %>, <%= selectedAddress.pincode %></p>
                            <p><i class="fas fa-map-pin"></i> <%= selectedAddress.landMark %></p>
                            <p><i class="fas fa-phone-alt"></i> <%= selectedAddress.phone %></p>
                        </div>
                    </div>
                </div>

                <!-- Payment Method Section -->
                <form action="/user/place-order" method="POST">
                    <input type="hidden" name="chosenAddress" value="<%= selectedAddress._id %>">
                    
                    <div class="section payment-section">
                        <div class="section-title">
                            <i class="fas fa-wallet"></i>
                            <h3>Payment Method</h3>
                        </div>
                        <div class="payment-options">
                            <label class="payment-option">
                                <input type="radio" name="paymentMethod" value="COD" required>
                                <div class="option-content">
                                    <div class="option-icon cod">
                                        <i class="fas fa-money-bill-wave"></i>
                                    </div>
                                    <div class="option-details">
                                        <h4>Cash on Delivery</h4>
                                        <p>Pay when you receive your order</p>
                                    </div>
                                </div>
                            </label>

                            <label class="payment-option">
                                <input type="radio" name="paymentMethod" value="Wallet" required>
                                <div class="option-content">
                                    <div class="option-icon wallet">
                                        <i class="fas fa-wallet"></i>
                                    </div>
                                    <div class="option-details">
                                        <h4>Pay with Wallet</h4>
                                        <!-- <p>Balance: â‚¹</%= user.wallet || 0 %></p> -->
                                    </div>
                                </div>
                            </label>

                            <label class="payment-option">
                                <input type="radio" name="paymentMethod" value="RazorPay" id="razorpay" required>
                                <div class="option-content">
                                    <div class="option-icon online">
                                        <i class="fas fa-credit-card"></i>
                                    </div>
                                    <div class="option-details">
                                        <h4>RazorPay</h4>
                                        <p>Cards/UPI/NetBanking</p>
                                    </div>
                                </div>
                            </label>
                        </div>
                    </div>

                    <div class="action-section">
                        <button type="submit" id="orderBtn" class="place-order-btn">
                            <span>Place Order</span>
                            <i class="fas fa-arrow-right"></i>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    .payment-container {
        min-height: 100vh;
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        padding: 40px 20px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .payment-wrapper {
        width: 100%;
        max-width: 900px;
        margin: 0 auto;
    }

    .payment-card {
        background: white;
        border-radius: 20px;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    .payment-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 40px;
        text-align: center;
    }

    .header-icon {
        width: 70px;
        height: 70px;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 20px;
    }

    .header-icon i {
        font-size: 30px;
    }

    .payment-header h2 {
        font-size: 28px;
        margin-bottom: 10px;
    }

    .order-progress {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 30px;
        background: #f8f9fa;
    }

    .progress-step {
        display: flex;
        flex-direction: column;
        align-items: center;
        color: #adb5bd;
    }

    .progress-step.active {
        color: #667eea;
    }

    .progress-step i {
        font-size: 24px;
        margin-bottom: 8px;
    }

    .progress-line {
        width: 100px;
        height: 2px;
        background: #dee2e6;
        margin: 0 15px;
    }

    .progress-line.active {
        background: #667eea;
    }

    .payment-content {
        padding: 30px;
    }

    .section {
        margin-bottom: 30px;
    }

    .section-title {
        display: flex;
        align-items: center;
        margin-bottom: 20px;
    }

    .section-title i {
        font-size: 24px;
        color: #667eea;
        margin-right: 15px;
    }

    .section-title h3 {
        font-size: 20px;
        margin: 0;
    }

    .address-card {
        background: #f8f9fa;
        border-radius: 15px;
        padding: 20px;
    }

    .user-name {
        font-size: 20px;
        font-weight: 600;
        color: #2d3748;
        margin-bottom: 15px;
    }

    .address-details p {
        margin: 8px 0;
        color: #4a5568;
    }

    .address-details i {
        margin-right: 10px;
        color: #667eea;
    }

    .payment-options {
        display: grid;
        gap: 15px;
    }

    .payment-option {
        cursor: pointer;
        margin: 0;
    }

    .option-content {
        display: flex;
        align-items: center;
        padding: 12px 15px;
        border: 2px solid #e2e8f0;
        border-radius: 12px;
        transition: all 0.3s ease;
    }

    .payment-option input:checked + .option-content {
        border-color: #667eea;
        background: #f8f9fa;
    }

    .option-icon {
        width: 40px;
        height: 40px;
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 15px;
    }

    .option-icon.cod {
        background: #c6f6d5;
        color: #38a169;
    }

    .option-icon.wallet {
        background: #fed7aa;
        color: #c2410c;
    }

    .option-icon.online {
        background: #bee3f8;
        color: #3182ce;
    }

    .option-icon i {
        font-size: 20px;
    }

    .option-details h4 {
        margin: 0 0 2px;
        font-size: 15px;
    }

    .option-details p {
        margin: 0;
        color: #718096;
        font-size: 13px;
    }

    .action-section {
        text-align: center;
        margin-top: 40px;
    }

    .place-order-btn {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        padding: 15px 40px;
        border-radius: 30px;
        font-size: 18px;
        cursor: pointer;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 10px;
    }

    .place-order-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
    }

    @media (max-width: 768px) {
        .payment-wrapper {
            padding: 0;
        }

        .payment-header {
            padding: 30px 20px;
        }

        .order-progress {
            padding: 20px;
        }

        .progress-line {
            width: 50px;
        }

        .payment-content {
            padding: 20px;
        }

        .option-content {
            flex-direction: column;
            text-align: center;
        }

        .option-icon {
            margin: 0 0 15px;
        }
    }
</style>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
// document.querySelector('form').addEventListener('submit', async function(e) {
//     e.preventDefault();
document.getElementById('orderBtn').addEventListener('click', async function(e) {
    e.preventDefault();
    
    const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;
    const chosenAddress = document.querySelector('input[name="chosenAddress"]').value;

    const totalAmount = Number('<%= totalAmount %>');
    
    if (paymentMethod === 'RazorPay') {
        try {
            // Create Razorpay order
            const orderResponse = await fetch('/user/create-razorpay-order', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    amount:  totalAmount * 100  // Convert to paise
                })
            });

            if (!orderResponse.ok) {
                throw new Error('Failed to create order');
            }

            const order = await orderResponse.json();
            console.log("Razorpay order created:", order); // Debug log

            // Initialize Razorpay payment
            const options = {
                key: '<%= process.env.RAZORPAY_KEY_ID %>',
                amount: totalAmount * 100,
                currency: 'INR',
                name: 'Downy Shoes',
                description: 'Order Payment',
                order_id: order.id,
                handler: async function(response) {
                    // After successful payment, create order in your system
                    const orderData = {
                        chosenAddress,
                        paymentMethod: 'RazorPay',
                        razorpay_payment_id: response.razorpay_payment_id,
                        razorpay_order_id: response.razorpay_order_id,
                        razorpay_signature: response.razorpay_signature
                    };

                    try {
                        const placeOrderResponse = await fetch('/user/place-order', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(orderData)
                        });

                        const result = await placeOrderResponse.json();

                        if (result.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Order Placed Successfully!',
                                text: 'Your payment was successful',
                                showConfirmButton: false,
                                timer: 1500
                            }).then(() => {
                                window.location.href = `/user/order-success?orderId=${result.orderId}`;
                            });
                        } else {
                            throw new Error(result.message);
                        }
                    } catch (error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Order Failed',
                            text: error.message || 'Failed to place order'
                        });
                    }
                },
                prefill: {
                    name: '<%= user.name %>',
                    email: '<%= user.email %>'
                },
                theme: {
                    color: '#3399cc'
                }
            };

            console.log("Initializing Razorpay with options:", options); // Debug log
            console.log('Amount in paise:', totalAmount * 100);
            console.log('Razorpay Key:', options.key);
            console.log('Order ID:', order.id);
            const rzp = new Razorpay(options);
            rzp.open();

            // Handle payment failure
            rzp.on('payment.failed', function(response) {
                Swal.fire({
                    icon: 'error',
                    title: 'Payment Failed',
                    text: 'The payment was not successful. Please try again.'
                });
            });

        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.message || 'Something went wrong!'
            });
        }
    } else {
        // For COD and Wallet payments
        try {
            const response = await fetch('/user/place-order', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    chosenAddress,
                    paymentMethod
                })
            });

            const result = await response.json();

            if (result.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Order Placed Successfully!',
                    text: 'Your payment was successful',
                    showConfirmButton: false,
                    timer: 1500
                }).then(() => {
                    window.location.href = `/user/order-success?orderId=${result.orderId}`;
                });
            } else {
                throw new Error(result.message);
            }
        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: 'Order Failed',
                text: error.message || 'Failed to place order'
            });
        }
    }
});
</script>

<%- include("../partials/user/footer") %>